<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>build-datamart</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2020/03/29 01:20:12.245</created_date>
  <modified_user>-</modified_user>
  <modified_date>2020/03/29 01:20:12.245</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>itmd526-localhost</name>
    <server>localhost</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>source_db</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86aa7a296a200af508fcbf688</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>itmd526conn</name>
    <server>localhost</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>source_db</database>
    <port>3306</port>
    <username>root</username>
    <password>Encrypted 2be98afc86aa7a296a200af508fcbf688</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>3306</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STREAM_RESULTS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>48</xloc>
      <yloc>64</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>covid_cases_table</name>
      <description/>
      <type>TRANS</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Entry.Current.Directory}/extract.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>368</xloc>
      <yloc>64</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>build summary (by country)</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DROP TABLE IF EXISTS COVID19_state_day;

CREATE TABLE COVID19_state_day
AS
SELECT TRIM(country_region) AS country, TRIM(province_state) AS state,STR_TO_DATE(date_reported, '%m-%d-%Y') AS date_reported, 
IFNULL(SUM(cnt_confirmed),0) AS cnt_cum_confirmed, IFNULL(SUM(cnt_death),0) AS cnt_cum_death,
IFNULL(SUM(cnt_recovered),0) AS cnt_cum_recovred
  FROM COVID19_daily_report 
 WHERE 1=1
   AND country_region IS NOT NULL
 GROUP BY country_region, STR_TO_DATE(date_reported, '%m-%d-%Y')
;



DROP TABLE if EXISTS COVID19_country_day;

 CREATE TABLE COVID19_country_day
AS
SELECT TRIM(country_region) AS country, STR_TO_DATE(date_reported, '%m-%d-%Y') AS date_reported, 
       IFNULL(SUM(cnt_confirmed),0) AS cnt_cum_confirmed, IFNULL(SUM(cnt_death),0) AS cnt_cum_death,
       IFNULL(SUM(cnt_recovered),0) AS cnt_cum_recovred
  FROM COVID19_daily_report 
 WHERE 1=1
   AND country_region IS NOT NULL
 GROUP BY country_region, STR_TO_DATE(date_reported, '%m-%d-%Y');
 
 
DROP TABLE IF EXISTS COVID19_country_day_seq;

/* SEQ generation */
CREATE TABLE COVID19_country_day_seq
AS
SELECT TRIM(a.country) AS country, a.date_reported, a.cnt_cum_confirmed, 
       a.cnt_cum_death, a.cnt_cum_recovred, COUNT(*) country_seq
  FROM COVID19_country_day a, COVID19_country_day b
 WHERE a.country = b.country
   AND a.date_reported >= b.date_reported
 GROUP BY a.country, a.date_reported, a.cnt_cum_confirmed, a.cnt_cum_death, a.cnt_cum_recovred; 
 

DROP TABLE IF EXISTS COVID19_country_day_summary;

/* Lead/Lag : Windows/Analytic Functions */
CREATE TABLE COVID19_country_day_summary
AS
SELECT a.*, (a.cnt_cum_confirmed - IFNULL(b.cnt_cum_confirmed,0)) AS cnt_new_confirmed,
       (a.cnt_cum_death - IFNULL(b.cnt_cum_death,0)) AS cnt_new_death,
       (a.cnt_cum_recovred - IFNULL(b.cnt_cum_recovred,0)) AS cnt_new_recovred
  FROM COVID19_country_day_seq a
  LEFT OUTER JOIN COVID19_country_day_seq b
    ON a.country = b.country
   AND a.country_seq = b.country_seq+1
 ORDER BY 1,2,6
;   
  

/* Build N-day rolling to smooth out the visualization and find trend */
DROP TABLE IF EXISTS COVID19_country_week_summary;

/* Lead/Lag : Windows/Analytic Functions */
CREATE TABLE COVID19_country_week_summary
AS
SELECT a.country, a.date_reported, a.cnt_cum_confirmed, SUM(b.cnt_new_confirmed) AS cnt_week_confirmed,
       a.cnt_cum_death, SUM(b.cnt_new_death) AS cnt_week_death,
       a.cnt_cum_recovred, SUM(b.cnt_new_recovred) AS cnt_week_recovred
  FROM COVID19_country_day_summary a
  LEFT OUTER JOIN COVID19_country_day_summary b
    ON a.country = b.country
   AND b.country_seq BETWEEN a.country_seq-6 AND a.country_seq
 GROUP BY a.country, a.date_reported, a.cnt_cum_confirmed, cnt_cum_death, cnt_cum_recovred
;   
  
  
/* For Logarithmic Scale purpose */
DELETE 
  FROM COVID19_country_day_summary
 WHERE cnt_cum_confirmed &lt;= 0
;

DELETE 
  FROM COVID19_country_day_summary
 WHERE cnt_new_confirmed &lt;= 0
;

DELETE 
  FROM COVID19_country_day_summary
 WHERE cnt_cum_death &lt;= 0
;

DELETE 
  FROM COVID19_country_day_summary
 WHERE cnt_new_death &lt;= 0
;

DELETE 
  FROM COVID19_country_day_summary
 WHERE cnt_cum_recovred &lt;= 0
;

DELETE 
  FROM COVID19_country_day_summary
 WHERE cnt_new_recovred &lt;= 0
;

/* For Logarithmic Scale purpose */
DELETE 
  FROM COVID19_country_week_summary
 WHERE cnt_cum_confirmed &lt;= 0
;

DELETE 
  FROM COVID19_country_week_summary
 WHERE cnt_week_confirmed &lt;= 0
;

DELETE 
  FROM COVID19_country_week_summary
 WHERE cnt_cum_death &lt;= 0
;

DELETE 
  FROM COVID19_country_week_summary
 WHERE cnt_week_death &lt;= 0
;

DELETE 
  FROM COVID19_country_week_summary
 WHERE cnt_cum_recovred &lt;= 0
;

DELETE 
  FROM COVID19_country_week_summary
 WHERE cnt_week_recovred &lt;= 0
;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>itmd526conn</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>640</xloc>
      <yloc>64</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>initiate-ddl</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DROP TABLE IF EXISTS `COVID19_daily_report`;

CREATE TABLE `COVID19_daily_report` (
  `province_state` varchar(64) DEFAULT NULL,
  `country_region` varchar(64) DEFAULT NULL,
  `last_update` varchar(32) DEFAULT NULL,
  `cnt_confirmed` varchar(32) DEFAULT NULL,
  `cnt_death` varchar(32) DEFAULT NULL,
  `cnt_recovered` varchar(32) DEFAULT NULL,
  `date_reported` varchar(24) DEFAULT NULL,
  KEY `country_region` (`country_region`,`date_reported`),
  KEY `country_region_2` (`country_region`,`province_state`,`date_reported`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>itmd526conn</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>192</xloc>
      <yloc>64</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Initial-ddl2</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DROP TABLE IF EXISTS `COVID19_daily_test_report`;

CREATE TABLE `COVID19_daily_test_report` (
  `iso_code` VARCHAR(64) DEFAULT NULL,
  `continent` VARCHAR(64) DEFAULT NULL,
  `country` VARCHAR(64) DEFAULT NULL,
  `date_reported` VARCHAR(32) DEFAULT NULL,
  `total_cases` VARCHAR(32) DEFAULT NULL,
  `new_cases` VARCHAR(32) DEFAULT NULL,
  `total_deaths` VARCHAR(32) DEFAULT NULL,
  `new_deaths` VARCHAR(24) DEFAULT NULL,
  `total_cases_per_million` VARCHAR(64) DEFAULT NULL,
  `new_cases_per_million` VARCHAR(64) DEFAULT NULL,
  `total_deaths_per_million` VARCHAR(64) DEFAULT NULL,
  `new_deaths_per_million` VARCHAR(32) DEFAULT NULL,
  `icu_patients` VARCHAR(32) DEFAULT NULL,
  `icu_patients_per_million` VARCHAR(32) DEFAULT NULL,
  `hosp_patients` VARCHAR(32) DEFAULT NULL,
  `hosp_patients_per_million` VARCHAR(24) DEFAULT NULL,
  `weekly_icu_admissions` VARCHAR(64) DEFAULT NULL,
  `weekly_hosp_admissions` VARCHAR(64) DEFAULT NULL,
  `total_tests` VARCHAR(64) DEFAULT NULL,
  `new_tests` VARCHAR(32) DEFAULT NULL,
  `tests_per_case` VARCHAR(32) DEFAULT NULL,
  `positive_rate` VARCHAR(32) DEFAULT NULL,
  `tests_units` VARCHAR(32) DEFAULT NULL,
  `stringency_index` VARCHAR(24) DEFAULT NULL,
  `population` VARCHAR(64) DEFAULT NULL,
  `population_density` VARCHAR(64) DEFAULT NULL,
  `median_age` VARCHAR(64) DEFAULT NULL,
  `aged_65_older` VARCHAR(32) DEFAULT NULL,
  `aged_70_older` VARCHAR(32) DEFAULT NULL,
  `gdp_per_capita` VARCHAR(32) DEFAULT NULL,
  `extreme_poverty` VARCHAR(32) DEFAULT NULL,
  `cardiovasc_death_rate` VARCHAR(24) DEFAULT NULL,
  `diabetes_prevalence` VARCHAR(64) DEFAULT NULL,
  `hospital_beds_per_thousand` VARCHAR(32) DEFAULT NULL,
  `life_expectancy` VARCHAR(32) DEFAULT NULL,
  KEY `continent` (`continent`,`date_reported`),
  KEY `continent_2` (`continent`,`country`,`date_reported`),
  KEY `country` (`country`,`date_reported`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>itmd526-localhost</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>976</xloc>
      <yloc>64</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>covid_test_table</name>
      <description/>
      <type>TRANS</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Entry.Current.Directory}/extract2.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>976</xloc>
      <yloc>240</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>build summary (by continent)</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>

DROP TABLE IF EXISTS COVID19_country_census;

CREATE TABLE COVID19_country_census
AS
SELECT TRIM(country) AS country, date_reported, 
       IFNULL(SUM(total_deaths),0) AS total_deaths, IFNULL(SUM(icu_patients),0) AS icu_patients,
       IFNULL(SUM(stringency_index),0) AS stringency_index, IFNULL(SUM(population),0) AS population, 
       IFNULL(SUM(median_age),0) AS median_age, IFNULL(SUM(aged_65_older),0) AS aged_65_older,
       IFNULL(SUM(aged_70_older),0) AS aged_70_older, IFNULL(SUM(gdp_per_capita),0) AS gdp_per_capita,
       IFNULL(SUM(diabetes_prevalence),0) AS diabetes_prevalence, 
       IFNULL(SUM(cardiovasc_death_rate),0) AS cardiovasc_death_rate,
       IFNULL(SUM(life_expectancy),0) AS life_expectancy 
  FROM COVID19_daily_test_report 
 WHERE 1=1
   AND country IS NOT NULL
 GROUP BY country, date_reported
;

DROP TABLE IF EXISTS COVID19_continent_day;

CREATE TABLE COVID19_continent_day
AS
SELECT TRIM(continent) AS continent, date_reported, 
       IFNULL(SUM(total_tests),0) AS total_tests, IFNULL(SUM(total_cases),0) AS total_cases, 
       IFNULL(SUM(total_deaths),0) AS total_deaths, IFNULL(SUM(icu_patients),0) AS icu_patients 
  FROM COVID19_daily_test_report 
 WHERE 1=1
   AND continent IS NOT NULL
 GROUP BY continent, date_reported
;

DROP TABLE IF EXISTS COVID19_continent_day_seq;

/* SEQ generation */
CREATE TABLE COVID19_continent_day_seq
AS
SELECT TRIM(a.continent) AS continent, a.date_reported, a.total_tests, a.total_deaths, 
       a.icu_patients, COUNT(*) continent_seq
  FROM COVID19_continent_day a, COVID19_continent_day b
 WHERE a.continent = b.continent
   AND a.date_reported >= b.date_reported
 GROUP BY a.continent, a.date_reported, a.total_tests, a.total_deaths, 
       a.icu_patients; 
 
DROP TABLE IF EXISTS COVID19_continent_day_summary;

/* Lead/Lag : Windows/Analytic Functions */
CREATE TABLE COVID19_continent_day_summary
AS
SELECT a.*, (a.total_tests - IFNULL(b.total_tests,0)) AS total_new_tests,
       (a.total_deaths - IFNULL(b.total_deaths,0)) AS total_new_deaths,
       (a.icu_patients - IFNULL(b.icu_patients,0)) AS new_icu_patients
  FROM COVID19_continent_day_seq a
  LEFT OUTER JOIN COVID19_continent_day_seq b
    ON a.continent = b.continent
   AND a.continent_seq = b.continent_seq+1
 ORDER BY 1,2,6;

/* Build N-day rolling to smooth out the visualization and find trend */
DROP TABLE IF EXISTS COVID19_continent_week_summary;

/* Lead/Lag : Windows/Analytic Functions */
CREATE TABLE COVID19_continent_week_summary
AS
SELECT a.continent, a.date_reported, a.total_tests, SUM(b.total_new_tests) AS cnt_week_tests,
       a.total_deaths, SUM(b.total_new_deaths) AS cnt_week_deaths,
       a.icu_patients, SUM(b.new_icu_patients) AS cnt_week_icu_patients
  FROM COVID19_continent_day_summary a
  LEFT OUTER JOIN COVID19_continent_day_summary b
    ON a.continent = b.continent
   AND b.continent_seq BETWEEN a.continent_seq-6 AND a.continent_seq
 GROUP BY a.continent, a.date_reported, a.total_tests, a.total_deaths, a.icu_patients;

/* For Logarithmic Scale purpose */


DELETE 
  FROM COVID19_continent_day_summary
 WHERE total_new_tests &lt; 0
;

DELETE 
  FROM COVID19_continent_day_summary
 WHERE total_new_deaths &lt; 0
;

DELETE 
  FROM COVID19_continent_day_summary
 WHERE new_icu_patients &lt; 0
;

/* For Logarithmic Scale purpose */


DELETE 
  FROM COVID19_continent_week_summary
 WHERE cnt_week_tests &lt; 0
;

DELETE 
  FROM COVID19_continent_week_summary
 WHERE cnt_week_deaths &lt; 0
;

DELETE 
  FROM COVID19_continent_week_summary
 WHERE cnt_week_icu_patients &lt; 0
;

 
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>itmd526conn</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>976</xloc>
      <yloc>416</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Initial-ddl3</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DROP TABLE IF EXISTS `COVID19_daily_US_report`;

CREATE TABLE `COVID19_daily_US_report` (
  `Province_State` VARCHAR(64) DEFAULT NULL,
  `Country_Region`VARCHAR(64) DEFAULT NULL,
  `Last_Update` VARCHAR(32) DEFAULT NULL,
  `Lat` VARCHAR(32) DEFAULT NULL,
  `Long_` VARCHAR(32) DEFAULT NULL,
  `Confirmed` VARCHAR(32) DEFAULT NULL,
  `Deaths` VARCHAR(32) DEFAULT NULL,
  `Recovered` VARCHAR(24) DEFAULT NULL,
  `Active` VARCHAR(24) DEFAULT NULL,
  `Incident_Rate` VARCHAR(64) DEFAULT NULL,
  `People_Tested`VARCHAR(64) DEFAULT NULL,
  `People_Hospitalized` VARCHAR(32) DEFAULT NULL,
  `Mortality_Rate` VARCHAR(32) DEFAULT NULL,
  `Testing_Rate` VARCHAR(32) DEFAULT NULL,
  `Hospitalization_Rate` VARCHAR(32) DEFAULT NULL,
  `Date_Reported` VARCHAR(24) DEFAULT NULL,
  KEY `Country_Region` (`Country_Region`,`Date_Reported`),
  KEY `Country_Region_2` (`Country_Region`,`Province_State`,`Date_Reported`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>itmd526-localhost</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>2</nr>
      <xloc>976</xloc>
      <yloc>544</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>covid_USA_table</name>
      <description/>
      <type>TRANS</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Entry.Current.Directory}/extract3.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>2</nr>
      <xloc>976</xloc>
      <yloc>768</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>build summary (by US State)</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
 DROP TABLE IF EXISTS COVID19_US_day;

CREATE TABLE COVID19_US_day
AS
SELECT TRIM(Province_State) AS State, TRIM(Country_Region) AS Country_Region, date_reported AS date_reported,
       Lat AS Latitude, Long_ AS Longitude,  
       IFNULL((Confirmed),0) AS cnt_cum_confirmed, IFNULL(Deaths,0) AS cnt_cum_death,
       IFNULL((Recovered),0) AS cnt_cum_recovred, IFNULL(ACTIVE,0) AS cnt_cum_active,
       IFNULL(Incident_Rate,0) AS Incident_Rate,  IFNULL(People_Tested,0) AS cnt_cum_Tested,
       IFNULL(People_Hospitalized,0) AS People_Hospitalized,  IFNULL(Mortality_Rate,0) AS Mortality_Rate,
       IFNULL(Hospitalization_Rate,0) AS Hospitalization_Rate
  FROM COVID19_daily_US_report 
 WHERE 1=1
   AND Country_Region IS NOT NULL
   AND Province_State IS NOT NULL
 GROUP BY Country_Region, Province_State, date_reported;
 
 DROP TABLE IF EXISTS COVID19_US_day_seq;

/* SEQ generation */
CREATE TABLE COVID19_US_day_seq
AS
SELECT TRIM(a.State) AS state, a.date_reported, a.cnt_cum_confirmed, 
       a.cnt_cum_death, a.cnt_cum_recovred, a.cnt_cum_active, COUNT(*) state_seq,
       a.Incident_Rate, a.cnt_cum_Tested, a.People_Hospitalized, a.Mortality_Rate, a.Hospitalization_Rate
  FROM COVID19_US_day a, COVID19_US_day b
 WHERE a.State = b.State
   AND a.date_reported >= b.date_reported
 GROUP BY a.State, a.date_reported, a.cnt_cum_confirmed, a.cnt_cum_death, a.cnt_cum_recovred, a.cnt_cum_active; 
 
 
 DROP TABLE IF EXISTS COVID19_US_day_summary;

/* Lead/Lag : Windows/Analytic Functions */
CREATE TABLE COVID19_US_day_summary
AS
SELECT a.*, (a.cnt_cum_confirmed - IFNULL(b.cnt_cum_confirmed,0)) AS cnt_new_confirmed,
       (a.cnt_cum_death - IFNULL(b.cnt_cum_death,0)) AS cnt_new_death,
       (a.cnt_cum_recovred - IFNULL(b.cnt_cum_recovred,0)) AS cnt_new_recovred,
       (a.cnt_cum_active - IFNULL(b.cnt_cum_active,0)) AS cnt_new_active,
       (a.cnt_cum_Tested - IFNULL(b.cnt_cum_Tested,0)) AS cnt_new_tested
  FROM COVID19_US_day_seq a
  LEFT OUTER JOIN COVID19_US_day_seq b
    ON a.state = b.state
   AND a.state_seq = b.state_seq+1
 ORDER BY 1,2,7
; 
 </sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>itmd526conn</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>2</nr>
      <xloc>1184</xloc>
      <yloc>768</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1376</xloc>
      <yloc>768</yloc>
      <attributes_kjc/>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>covid_cases_table</from>
      <to>build summary (by country)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>initiate-ddl</from>
      <to>covid_cases_table</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>initiate-ddl</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>build summary (by country)</from>
      <to>Initial-ddl2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Initial-ddl2</from>
      <to>covid_test_table</to>
      <from_nr>0</from_nr>
      <to_nr>1</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>covid_test_table</from>
      <to>build summary (by continent)</to>
      <from_nr>1</from_nr>
      <to_nr>1</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>build summary (by continent)</from>
      <to>Initial-ddl3</to>
      <from_nr>1</from_nr>
      <to_nr>2</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Initial-ddl3</from>
      <to>covid_USA_table</to>
      <from_nr>2</from_nr>
      <to_nr>2</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>covid_USA_table</from>
      <to>build summary (by US State)</to>
      <from_nr>2</from_nr>
      <to_nr>2</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>build summary (by US State)</from>
      <to>Success</to>
      <from_nr>2</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>
